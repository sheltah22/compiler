(* compiler.ml*)
open Pervasives
open Lang
open Lexer
open Parser

let arg_list =
  [
  ("-lex",
  Arg.String (fun str -> print_endline (string_of_token_list (lex_file str))),
  "Prints the list of tokens generated by the lexer");
  ("-parse",
  Arg.String (fun str -> print_endline (string_of_exp (parse_tokens (lex_file str)))),
  "Prints the abstract syntax tree generated by the parser");
  ]

let usage_msg =
    "Usage: compiler [flag] [filename.arith]\nAvailable flags:"

let main () =
  Arg.parse
  (Arg.align arg_list)
  (fun x -> (lex_file x |> parse_tokens |> interpret_tree |> print_expr))
  usage_msg

let _ = if !Sys.interactive then () else main ()
